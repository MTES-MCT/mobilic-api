version: 2.1
jobs:
  build:
    docker:
      - image: cimg/python:3.13
      - image: cimg/postgres:14.18
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: mobilic-test
    steps:
      - checkout
      - restore_cache:
          key: pipenv-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install dependencies with pipenv
          command: |
            pipenv install
      - save_cache:
          key: pipenv-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "~/.local/share/virtualenvs"
      - run:
          name: Wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          command: |
            pipenv run flask test
          environment:
            FLASK_APP: "app:app"
            FLASK_DEBUG: "1"
            DATABASE_URL: "postgresql://localhost:5432/mobilic-test"

  deploy:
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - run:
          name: Add Scalingo to known_hosts
          command: ssh-keyscan -H ssh.osc-fr1.scalingo.com >> ~/.ssh/known_hosts
      - run:
          name: Deploy to Scalingo
          command:
            if [ $CIRCLE_BRANCH = "prod" ];
            then
              git push -f git@ssh.osc-fr1.scalingo.com:$SCALINGO_PROD_APP_NAME.git ${CIRCLE_BRANCH}:master;
              git push -f git@ssh.osc-fr1.scalingo.com:$SCALINGO_SANDBOX_APP_NAME.git ${CIRCLE_BRANCH}:master;
            else
              git push -f git@ssh.osc-fr1.scalingo.com:$SCALINGO_STAGING_APP_NAME.git ${CIRCLE_BRANCH}:master;
            fi;

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - prod
