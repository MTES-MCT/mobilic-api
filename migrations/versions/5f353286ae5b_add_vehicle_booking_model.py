"""Add vehicle booking model

Revision ID: 5f353286ae5b
Revises: cc9bc7a3b096
Create Date: 2020-03-24 18:32:52.260613

"""
from collections import defaultdict

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session

# revision identifiers, used by Alembic.
revision = "5f353286ae5b"
down_revision = "cc9bc7a3b096"
branch_labels = None
depends_on = None


def _migrate_vehicle_booking():
    session = Session(bind=op.get_bind())
    vehicle_bookings_to_create = defaultdict(list)
    activities = session.execute(
        """
        SELECT a.submitter_id, a.start_time, a.vehicle_registration_number, a.event_time, u.company_id
        FROM activity a
        JOIN "user" u
        ON a.submitter_id = u.id
        """
    )
    submitter_to_company = {}

    for activity in sorted(activities, key=lambda a: a[1]):
        submitter_id = activity[0]
        submitter_to_company[submitter_id] = activity[4]
        if activity[2]:
            if (
                not vehicle_bookings_to_create[submitter_id]
                or vehicle_bookings_to_create[submitter_id][-1][
                    "registration_number"
                ]
                != activity[2]
            ):
                vehicle_bookings_to_create[submitter_id].append(
                    {
                        "registration_number": activity[2],
                        "start_time": activity[1],
                        "event_time": activity[3],
                    }
                )
            else:
                vehicle_bookings_to_create[submitter_id][-1][
                    "event_time"
                ] = min(
                    vehicle_bookings_to_create[submitter_id][-1]["event_time"],
                    activity[3],
                )

    for submitter_id, vehicle_bookings in vehicle_bookings_to_create.items():
        for vehicle_booking in vehicle_bookings:
            session.execute(
                """
                INSERT INTO vehicle_booking(
                    creation_time,
                    registration_number,
                    start_time,
                    event_time,
                    submitter_id,
                    company_id
                )
                VALUES(
                    NOW(),
                    :registration_number,
                    :start_time,
                    :event_time,
                    :submitter_id,
                    :company_id
                )
                """,
                dict(
                    submitter_id=submitter_id,
                    company_id=submitter_to_company[submitter_id],
                    **vehicle_booking,
                ),
            )

    session.flush()


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "vehicle_booking",
        sa.Column("creation_time", sa.DateTime(), nullable=False),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.Column("registration_number", sa.TEXT(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("submitter_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
        ),
        sa.ForeignKeyConstraint(
            ["submitter_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_vehicle_booking_company_id"),
        "vehicle_booking",
        ["company_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_vehicle_booking_submitter_id"),
        "vehicle_booking",
        ["submitter_id"],
        unique=False,
    )
    _migrate_vehicle_booking()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_vehicle_booking_submitter_id"), table_name="vehicle_booking"
    )
    op.drop_index(
        op.f("ix_vehicle_booking_company_id"), table_name="vehicle_booking"
    )
    op.drop_table("vehicle_booking")
    # ### end Alembic commands ###
