"""Add vehicle booking model

Revision ID: 5f353286ae5b
Revises: cc9bc7a3b096
Create Date: 2020-03-24 18:32:52.260613

"""
from collections import defaultdict

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session

from app.models import Activity, VehicleBooking

# revision identifiers, used by Alembic.
revision = "5f353286ae5b"
down_revision = "cc9bc7a3b096"
branch_labels = None
depends_on = None


def _migrate_vehicle_booking():
    session = Session(bind=op.get_bind())
    vehicle_bookings_to_create = defaultdict(list)
    activities = sorted(
        session.query(Activity).all(), key=lambda a: a.start_time
    )

    for activity in activities:
        submitter = activity.submitter
        if activity.vehicle_registration_number:
            if (
                not vehicle_bookings_to_create[submitter]
                or vehicle_bookings_to_create[submitter][-1][
                    "registration_number"
                ]
                != activity.vehicle_registration_number
            ):
                vehicle_bookings_to_create[submitter].append(
                    {
                        "registration_number": activity.vehicle_registration_number,
                        "start_time": activity.start_time,
                        "event_time": activity.event_time,
                    }
                )
            else:
                vehicle_bookings_to_create[submitter][-1]["event_time"] = min(
                    vehicle_bookings_to_create[submitter][-1]["event_time"],
                    activity.event_time,
                )

    for submitter, vehicle_bookings in vehicle_bookings_to_create.items():
        for vehicle_booking in vehicle_bookings:
            session.add(
                VehicleBooking(
                    submitter=submitter,
                    company_id=submitter.company_id,
                    **vehicle_booking,
                )
            )

    session.flush()


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "vehicle_booking",
        sa.Column("creation_time", sa.DateTime(), nullable=False),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.Column("registration_number", sa.TEXT(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("submitter_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["company_id"], ["company.id"],),
        sa.ForeignKeyConstraint(["submitter_id"], ["user.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_vehicle_booking_company_id"),
        "vehicle_booking",
        ["company_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_vehicle_booking_submitter_id"),
        "vehicle_booking",
        ["submitter_id"],
        unique=False,
    )
    _migrate_vehicle_booking()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_vehicle_booking_submitter_id"), table_name="vehicle_booking"
    )
    op.drop_index(
        op.f("ix_vehicle_booking_company_id"), table_name="vehicle_booking"
    )
    op.drop_table("vehicle_booking")
    # ### end Alembic commands ###
