"""oauth token

Revision ID: af395b68485a
Revises: c737e645f457
Create Date: 2020-09-24 12:40:08.472269

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "af395b68485a"
down_revision = "c737e645f457"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "oauth2_token",
        sa.Column("creation_time", sa.DateTime(), nullable=False),
        sa.Column("client_id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=255), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("revoked_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["client_id"], ["oauth2_client.id"],),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"],),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
    )
    op.create_index(
        op.f("ix_oauth2_token_client_id"),
        "oauth2_token",
        ["client_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth2_token_user_id"),
        "oauth2_token",
        ["user_id"],
        unique=False,
    )
    op.execute("CREATE EXTENSION IF NOT EXISTS btree_gist")
    op.execute(
        """
        ALTER TABLE oauth2_token ADD CONSTRAINT only_one_active_token_per_user_and_client
        EXCLUDE USING GIST (
            user_id WITH =,
            client_id WITH =
        )
        WHERE (revoked_at is null)
        """
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint("only_one_active_token_per_user_and_client", "oauth2_token")
    op.drop_index(op.f("ix_oauth2_token_user_id"), table_name="oauth2_token")
    op.drop_index(op.f("ix_oauth2_token_client_id"), table_name="oauth2_token")
    op.drop_table("oauth2_token")
    # ### end Alembic commands ###
