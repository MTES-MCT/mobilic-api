"""Team enrollment model

Revision ID: b448927b940a
Revises: 46be945ea269
Create Date: 2020-03-19 10:57:29.983857

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "b448927b940a"
down_revision = "46be945ea269"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "team_enrollment",
        sa.Column("creation_time", sa.DateTime(), nullable=False),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.Column("dismissed_at", sa.DateTime(), nullable=True),
        sa.Column(
            "dismiss_type",
            sa.Enum(
                "unauthorized_submitter",
                "user_cancel",
                name="dismisstype",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("dismiss_received_at", sa.DateTime(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "enroll",
                "remove",
                name="teamenrollmenttype",
                native_enum=False,
            ),
            nullable=False,
        ),
        sa.Column("action_time", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("submitter_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("dismiss_author_id", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.CheckConstraint(
            "(dismiss_type != 'user_cancel' OR dismiss_author_id is not null)",
            name="non_nullable_dismiss_author_id",
        ),
        sa.CheckConstraint(
            "((dismissed_at is not null)::bool = (dismiss_type is not null)::bool AND (dismiss_type is not null)::bool = (dismiss_received_at is not null)::bool)",
            name="non_nullable_dismiss_type",
        ),
        sa.ForeignKeyConstraint(["company_id"], ["company.id"],),
        sa.ForeignKeyConstraint(["dismiss_author_id"], ["user.id"],),
        sa.ForeignKeyConstraint(["submitter_id"], ["user.id"],),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_team_enrollment_company_id"),
        "team_enrollment",
        ["company_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_team_enrollment_dismiss_author_id"),
        "team_enrollment",
        ["dismiss_author_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_team_enrollment_submitter_id"),
        "team_enrollment",
        ["submitter_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_team_enrollment_user_id"),
        "team_enrollment",
        ["user_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_team_enrollment_user_id"), table_name="team_enrollment"
    )
    op.drop_index(
        op.f("ix_team_enrollment_submitter_id"), table_name="team_enrollment"
    )
    op.drop_index(
        op.f("ix_team_enrollment_dismiss_author_id"),
        table_name="team_enrollment",
    )
    op.drop_index(
        op.f("ix_team_enrollment_company_id"), table_name="team_enrollment"
    )
    op.drop_table("team_enrollment")
    # ### end Alembic commands ###
