"""Dismissable employment

Revision ID: c737e645f457
Revises: ed79627ad659
Create Date: 2020-09-15 12:12:07.136082

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c737e645f457"
down_revision = "ed79627ad659"
branch_labels = None
depends_on = None


def upgrade():
    op.add_column(
        "employment",
        sa.Column("dismiss_author_id", sa.Integer(), nullable=True),
    )
    op.add_column(
        "employment",
        sa.Column(
            "dismiss_context",
            postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
            nullable=True,
        ),
    )
    op.add_column(
        "employment",
        sa.Column("dismiss_received_at", sa.DateTime(), nullable=True),
    )
    op.add_column(
        "employment",
        sa.Column(
            "dismiss_type",
            sa.Enum("user_cancel", name="dismisstype", native_enum=False),
            nullable=True,
        ),
    )
    op.add_column(
        "employment", sa.Column("dismissed_at", sa.DateTime(), nullable=True)
    )
    op.create_index(
        op.f("ix_employment_dismiss_author_id"),
        "employment",
        ["dismiss_author_id"],
        unique=False,
    )
    op.create_foreign_key(
        None, "employment", "user", ["dismiss_author_id"], ["id"]
    )

    op.create_check_constraint(
        "non_nullable_dismiss_type",
        "employment",
        "((dismissed_at is not null)::bool = (dismiss_type is not null)::bool AND (dismiss_type is not null)::bool = (dismiss_received_at is not null)::bool)",
    )
    op.create_check_constraint(
        "non_nullable_dismiss_author_id",
        "employment",
        "(dismiss_type != 'user_cancel' OR dismiss_author_id is not null)",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("non_nullable_dismiss_type", "employment")
    op.drop_constraint("non_nullable_dismiss_author_id", "employment")
    op.drop_constraint(None, "employment", type_="foreignkey")
    op.drop_index(
        op.f("ix_employment_dismiss_author_id"), table_name="employment"
    )
    op.drop_column("employment", "dismissed_at")
    op.drop_column("employment", "dismiss_type")
    op.drop_column("employment", "dismiss_received_at")
    op.drop_column("employment", "dismiss_context")
    op.drop_column("employment", "dismiss_author_id")
    # ### end Alembic commands ###
