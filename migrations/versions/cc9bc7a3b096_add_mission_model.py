"""Add mission model

Revision ID: cc9bc7a3b096
Revises: 3030266fdd01
Create Date: 2020-03-23 12:03:00.482293

"""
from collections import defaultdict

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session

# revision identifiers, used by Alembic.
revision = "cc9bc7a3b096"
down_revision = "3030266fdd01"
branch_labels = None
depends_on = None


def _migrate_mission():
    session = Session(bind=op.get_bind())
    missions_to_create = defaultdict(list)
    activities = session.execute(
        """
        SELECT a.submitter_id, a.start_time, a.mission, a.event_time, u.company_id
        FROM activity a
        JOIN "user" u
        ON a.submitter_id = u.id
        """
    )
    submitter_to_company = {}

    for activity in sorted(activities, key=lambda a: a[1]):
        submitter_id = activity[0]
        submitter_to_company[submitter_id] = activity[4]
        if activity[2]:
            if (
                not missions_to_create[submitter_id]
                or missions_to_create[submitter_id][-1]["name"] != activity[2]
            ):
                missions_to_create[submitter_id].append(
                    {
                        "name": activity[2],
                        "start_time": activity[1],
                        "event_time": activity[3],
                    }
                )
            else:
                missions_to_create[submitter_id][-1]["event_time"] = min(
                    missions_to_create[submitter_id][-1]["event_time"],
                    activity[3],
                )

    for submitter_id, missions in missions_to_create.items():
        for mission in missions:
            session.execute(
                """
                INSERT INTO mission(
                    creation_time,
                    name,
                    start_time,
                    event_time,
                    submitter_id,
                    company_id
                )
                VALUES(
                    NOW(),
                    :name,
                    :start_time,
                    :event_time,
                    :submitter_id,
                    :company_id
                )
                """,
                dict(
                    submitter_id=submitter_id,
                    company_id=submitter_to_company[submitter_id],
                    **mission,
                ),
            )

    session.flush()


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mission",
        sa.Column("creation_time", sa.DateTime(), nullable=False),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.Column("name", sa.TEXT(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("submitter_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
        ),
        sa.ForeignKeyConstraint(
            ["submitter_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_mission_company_id"), "mission", ["company_id"], unique=False
    )
    op.create_index(
        op.f("ix_mission_submitter_id"),
        "mission",
        ["submitter_id"],
        unique=False,
    )
    _migrate_mission()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_mission_submitter_id"), table_name="mission")
    op.drop_index(op.f("ix_mission_company_id"), table_name="mission")
    op.drop_table("mission")
    # ### end Alembic commands ###
