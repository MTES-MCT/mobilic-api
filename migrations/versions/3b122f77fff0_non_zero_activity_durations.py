"""non zero activity durations

Revision ID: 3b122f77fff0
Revises: a4be56f6b1a8
Create Date: 2021-09-30 14:32:06.014043

"""
from alembic import op
from sqlalchemy.orm.session import Session
from collections import defaultdict

# revision identifiers, used by Alembic.
revision = "3b122f77fff0"
down_revision = "a4be56f6b1a8"
branch_labels = None
depends_on = None


def _delete_history_from_missions_with_zero_duration_activity_versions():
    session = Session(bind=op.get_bind())
    rows = session.execute(
        """
        SELECT
            av2.id,
            av2.activity_id,
            av2.version_number
        FROM activity_version av2
        JOIN activity a2
        ON av2.activity_id = a2.id
        JOIN (
            SELECT
                DISTINCT a.mission_id, a.user_id
            FROM activity_version av
            JOIN activity a
            ON av.activity_id = a.id
            WHERE a.start_time != a.end_time
            AND av.start_time = av.end_time
        ) mu
        ON a2.user_id = mu.user_id
        AND a2.mission_id = mu.mission_id
        """
    )

    activities_to_delete_history_from = defaultdict(list)

    for activity_version_id, activity_id, version_number in rows:
        activities_to_delete_history_from[activity_id].append(
            dict(version_id=activity_version_id, version_number=version_number)
        )

    for activity_id, versions in activities_to_delete_history_from.items():
        max_version = max([version["version_number"] for version in versions])
        session.execute(
            "DELETE FROM activity_version where activity_id = :activity_id AND version_number < :max_version",
            dict(activity_id=activity_id, max_version=max_version),
        )
        session.execute(
            "UPDATE activity_version SET version_number = 1 where activity_id = :activity_id",
            dict(activity_id=activity_id, max_version=max_version),
        )


def _delete_activities_with_zero_duration():
    op.execute(
        """
        DELETE FROM activity_version WHERE activity_id IN (
            SELECT id
            FROM activity
            WHERE start_time = end_time
        )
        """
    )
    op.execute(
        """
        DELETE FROM activity WHERE start_time = end_time
        """
    )


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    _delete_history_from_missions_with_zero_duration_activity_versions()
    _delete_activities_with_zero_duration()

    op.drop_constraint("activity_start_time_before_end_time", "activity")
    op.drop_constraint(
        "activity_version_start_time_before_end_time", "activity_version"
    )

    op.create_check_constraint(
        "activity_start_time_before_end_time",
        "activity",
        "(end_time is null or start_time < end_time)",
    )
    op.create_check_constraint(
        "activity_version_start_time_before_end_time",
        "activity_version",
        "(end_time is null or start_time < end_time)",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("activity_start_time_before_end_time", "activity")
    op.drop_constraint(
        "activity_version_start_time_before_end_time", "activity_version"
    )

    op.create_check_constraint(
        "activity_start_time_before_end_time",
        "activity",
        "(end_time is null or start_time <= end_time)",
    )
    op.create_check_constraint(
        "activity_version_start_time_before_end_time",
        "activity_version",
        "(end_time is null or start_time <= end_time)",
    )  # ### end Alembic commands ###
